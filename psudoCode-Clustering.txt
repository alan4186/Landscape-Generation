% MATLAB style psudo code
% This is psudo code for the non-interactive vesion of the clustering method
% 10 city example

call executable to generate scores
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C program to generate and score every solution

void JohnsonTrotterAlgorithm(number of cities,xy coords of cities){
init city map with arguments for number of cities and xy coordinates
init first permutation as <1 <2 <3... <n // all directions are set to left

while there is still a mobile city{
    score curent permutation and write to disk
    generate next permutation by swaping largest mobile city
    find the next mobile city
}//end while

score last permutation and write to disk
}// end JohnsonTrotterAlgorithm
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% load scores and put them in a square matrix
scores = 10!x1 matrix of scores to all solutions
square = 1900x1900 matrix of scores

% choose 2 secions to pull height values from
pool1 = rectangle matrix, side length ratio 10:1 row:col
pool2 = rectangle matrix, side length ratio 10:1 row:col

% create 2 gradient sections by placing strips on a square 
% matrix at random angles
gradient=zero matrix, same number of rows/colums as pool rows

for i=1:60
    strip=create_strip(pool1)
    rotate strip by a random angle
    gradient = sum strip and gradient
end
repeat to create second gradient

normalize gradient means to 0
landscape= integration of gradients

filter landscape: gausian filter [5 5], sigma = 3

optionaly add more noise











function create_strip(pool)
    strip=a matrix the same size as pool initialized to the mean of pool
    
    reshape pool into a column vector
    % iterate through every point
    for point in strip 
        tmp= a point in pool within a given range...
        of the mean of the neighborhood of point
       
        point = tmp
        remove tmp from pool
    end
    return strip
    end
        
